# Generated by Django 2.1.7 on 2019-03-30 17:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('pen_pal', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user1_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user1', to='pen_pal.User')),
                ('user2_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user2', to='pen_pal.User')),
            ],
            options={
                'ordering': ['user1_id'],
            },
        ),
        migrations.CreateModel(
            name='ConversationText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField()),
                ('conversation_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.Conversation')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.Question')),
            ],
            options={
                'ordering': ['user_id'],
            },
        ),
        migrations.CreateModel(
            name='Literature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.TextField()),
                ('title', models.TextField()),
                ('authors', models.TextField()),
                ('year_of_publication', models.IntegerField()),
                ('journal', models.TextField()),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Matches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'ordering': ['user1_id'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_match', models.BooleanField()),
                ('new_convo', models.BooleanField()),
                ('seen', models.BooleanField()),
                ('conversation_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.Conversation')),
                ('match_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.Matches')),
            ],
            options={
                'ordering': ['match_id'],
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('why_report', models.TextField()),
                ('conversationtext_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.ConversationText')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.User')),
            ],
            options={
                'ordering': ['conversationtext_id'],
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer1', models.IntegerField()),
                ('answer2', models.IntegerField()),
                ('answer3', models.IntegerField()),
                ('conversation_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.Conversation')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.User')),
            ],
            options={
                'ordering': ['conversation_id'],
            },
        ),
        migrations.CreateModel(
            name='TopicLiterature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('literature_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.Literature')),
            ],
            options={
                'ordering': ['topic_id'],
            },
        ),
        migrations.RemoveField(
            model_name='topic',
            name='literature_review',
        ),
        migrations.AddField(
            model_name='topicliterature',
            name='topic_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.Topic'),
        ),
        migrations.AddField(
            model_name='matches',
            name='topic1_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='match_topic1', to='pen_pal.Topic'),
        ),
        migrations.AddField(
            model_name='matches',
            name='topic2_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='match_topic2', to='pen_pal.Topic'),
        ),
        migrations.AddField(
            model_name='matches',
            name='topic3_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='match_topic3', to='pen_pal.Topic'),
        ),
        migrations.AddField(
            model_name='matches',
            name='user1_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='match_user1', to='pen_pal.User'),
        ),
        migrations.AddField(
            model_name='matches',
            name='user2_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='match_user2', to='pen_pal.User'),
        ),
        migrations.AddField(
            model_name='conversationtext',
            name='topic_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.Topic'),
        ),
        migrations.AddField(
            model_name='conversationtext',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pen_pal.User'),
        ),
    ]
